
    <prism:PrismApplication x:Class="GraphAlgoritms.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"                                      
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:GraphAlgoritms"
             xmlns:prism="http://prismlibrary.com/" 
             xmlns:dg="clr-namespace:WPF.JoshSmith.Controls;assembly=WPF.JoshSmith.Controls.DragCanvas"
             xmlns:c="clr-namespace:GraphAlgoritms.Core.Converters;assembly=GraphAlgoritms.Core"  
             xmlns:ui="clr-namespace:GraphAlgoritms.Core.CustomUIElements;assembly=GraphAlgoritms.Core" >
    <Application.Resources>
        <Style TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>
        <Style TargetType="TextBlock" x:Key="NodeNameStyle">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="30"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FontSize" Value="30"/>
            <Setter Property="Width" Value="Auto"/>
        </Style>
        <Style TargetType="TextBox" x:Key="NodeWeightStyle" BasedOn="{StaticResource {x:Type TextBox}}" >
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="Foreground" Value="Yellow"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        <Style TargetType="TextBox" x:Key="EdgeWeightStyle" BasedOn="{StaticResource {x:Type TextBox}}" >           
            <Setter Property="Background" Value="Tomato"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        <!--<Style TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>
        <Style TargetType="TextBlock" x:Key="NodeNameStyle" BasedOn="{StaticResource {x:Type TextBlock}}">
            <Setter Property="FontSize" Value="30"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style>
        <Style TargetType="TextBlock" x:Key="NodeWeightStyle" BasedOn="{StaticResource NodeNameStyle}" >
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="30"/>
            <Setter Property="Width" Value="40"/>
        </Style>
        <Style TargetType="TextBox" x:Key="EdgeWeightStyle" BasedOn="{StaticResource {x:Type TextBox}}" >
            <Setter Property="Background" Value="Tomato"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>-->
        <Style TargetType="Label">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="20"/>
        </Style>
        <Style TargetType="ListBox">
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        </Style>
        <Style TargetType="ListBoxItem">
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="0,0,0,30"/>
        </Style>
        <Style TargetType="RadioButton">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <!--<Setter Property="Margin" Value="0,0,0,30"/>-->
        </Style>
        <Style TargetType="{x:Type ui:ArrowLine}">
            <Setter Property="StrokeThickness" Value="2"/>
            <Setter Property="Stroke" Value="Navy"/>
        </Style>
        <Style TargetType="Ellipse">
            <Setter Property="Fill" Value="Aqua"/>
            <Setter Property="Stroke" Value="Black"/>
        </Style>
        <Style TargetType="ItemsControl" >
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <dg:DragCanvas dg:AllowDragging="{Binding RelativeSource={
                                                                      RelativeSource FindAncestor, 
                                                                      AncestorType=UserControl}, 
                                                                  Path=DataContext.IsNodesMovingEnabled}"
                                       Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Canvas, Mode=FindAncestor}}" 
                                       Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Canvas, Mode=FindAncestor}}"
                                       />
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <c:BooleanToVisibilityConverter x:Key="BtVconverter"/>

        <ControlTemplate x:Key="graphCommandTemplate">
            <Grid Background="Transparent" Visibility="{Binding RelativeSource={
                                                                     RelativeSource FindAncestor, 
                                                                     AncestorType=ItemsControl},
                                                                  Path=DataContext.IsActiveGraphCommandEnabled,
                                                                  Converter={StaticResource BtVconverter}}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonUp">
                        <i:InvokeCommandAction CommandParameter="{Binding}"
                                               Command="{Binding RelativeSource={
                                                                     RelativeSource FindAncestor, 
                                                                     AncestorType=ItemsControl}, 
                                                                 Path=DataContext.ActiveGraphCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Grid>
        </ControlTemplate>
    </Application.Resources>
</prism:PrismApplication>
